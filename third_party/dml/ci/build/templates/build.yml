# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

parameters:
- name: IncludeTests
  type: boolean
  default: true
- name: IncludeCApi
  type: boolean
  default: false

steps:
- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  continueOnError: true

- powershell: |
    $CondaEnv = "build_tensorflow_dml_1.15_$(PyVersion)"
    if ("$(Architecture)" -eq "x64-linux")
    {
      cmd /c "wsl cd $(TfSourcePathWsl); third_party/dml/ci/build/wsl_build.sh $CondaEnv $(Configuration) $(TfArtifactsPathWsl) ${{parameters.IncludeTests}} ${{parameters.IncludeCApi}}"
    }
    else
    {
      cd "$(TfSourcePathWin)"
      & "$env:SYSTEMDRIVE/apilot/miniconda3/shell/condabin/conda-hook.ps1"
      conda activate $CondaEnv
      if ("${{parameters.IncludeTests}}" -eq "True")
      {
        python build.py --clean --package --tests --config $(Configuration) --build_output $(TfArtifactsPathWin) --telemetry
      }
      else
      {
        python build.py --clean --package --config $(Configuration) --build_output $(TfArtifactsPathWin) --telemetry
      }

      if ("${{parameters.IncludeCApi}}" -eq "True")
      {
        python build.py --config $(Configuration) --build_output $(TfArtifactsPathWin) --target //tensorflow/tools/lib_package:libtensorflow --telemetry
      }
    }
  name: build_step
  displayName: Build.py